name: Publish to PyPI and TestPyPI

on:
  push:
    tag:
      - v*


jobs:
  get_repository_and_branch:
    name: Get the owner and repository name, and the branch on which event happened
    runs-on: ubuntu-latest
    outputs:
      repository: ${{ github.repository }}
      branch: ${{ steps.check_step.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get current branch
        id: check_step
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw##*/}
          echo "::set-output name=branch::$branch"
          echo "Current branch: '$branch'"

  build_and_publish_on_pypi:
    name: Build and publish Python distribution to PyPI and TestPyPI
    needs: get_repository_and_branch
    if: ${{ needs.get_repository_and_branch.outputs.repository == 'Illumaria/open-metric-learning' && needs.get_repository_and_branch.outputs.branch == 'automatic-publish-to-pypi' }} # only run on main branch
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8.0"

    - name: Build a binary wheel
      run: |
        make build_wheel

    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

#    - name: Publish distribution to PyPI
#      uses: pypa/gh-action-pypi-publish@release/v1
#      with:
#        password: ${{ secrets.PYPI_API_TOKEN }}


#  test_installation_from_pypi:
#    needs: build_and_publish_on_pypi
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@master
#
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: "3.8.0"
#
#    - name: Install and import
#      run: |
#        make pip_install_actual_oml
#        python3 -c "from oml.losses.triplet import TripletLoss"
